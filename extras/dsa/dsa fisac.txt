1)
#include<stdio.h>
#include<conio.h>
struct emp{
int a;
struct emp *next;



};
typedef struct emp node;
node *head,*tail,*tail2,*head2;
void input(node *p){
printf("enter a number \n");
scanf("%d",&(p->a));
p->next=NULL;
}
void myadd(){
node *t;
t= (node*)calloc(1,sizeof(node));
input(t);
if(head==NULL)
    head = t;
else
    sort1(t);

}
void myadd1(){
node *t;
t= (node*)calloc(1,sizeof(node));
input(t);
if(head2==NULL)
    head2 = t;
else
    sort2(t);
   ;
}
void print(node *p){
printf(" %d ",p->a);

}
void mylist(){
if(head==NULL){
    printf(" list is empty \n");
    return;

}
node *t;
for(t= head;t!=NULL;t=t->next)
{
    print(t);
}
printf("\n");
}
void mylist1(){
if(head2==NULL){
    printf(" list is empty \n");
    return;

}
node *t;
for(t= head2;t!=NULL;t=t->next)
{
    print(t);
}
printf("\n");
}
void sort1(node *p){
node *t;
int bulb=0;
if(head->a>p->a){
    p->next=head;
    head =p;
    return;

}
for(t=head;t->next!=NULL;t=t->next){
    if(p->a<t->next->a){
        bulb =1;
        break;
    }}
    if(bulb==1){
        p->next=t->next;
        t->next=p;

    }
    else{
        t->next=p;
//2p->next =NULL;

       // tail=p;
    }

}
void sort2(node *p){
node *t;
int bulb=0;
if(head2->a>p->a){
    p->next=head2;
    head2 =p;
    return;

}
for(t=head2;t->next!=NULL;t=t->next){
    if(p->a<t->next->a){
        bulb =1;
        break;
    }}
    if(bulb==1){
        p->next=t->next;
        t->next=p;

    }
    else{
        t->next=p;

        tail2=p;
    }

}
void finalsort(node *p){
node *t,*temp;

int bulb=0;
if(head->a>p->a){
    p->next=head;
    head =p;
    return;

}
for(t=head;t->next!=NULL;t=t->next){
    if(p->a<t->next->a){
        bulb =1;
        break;
    }}
    if(bulb==1){
        p->next=t->next;
        t->next=p;

    }
    else{
        t->next=p;
p->next =NULL;
        tail=p;
    }

}







void main(){
int ch,i,n1;
head= NULL;
int n;
node *t;
printf("enter total elements in list 1  ");
scanf("%d",&n);
for(i=0;i<n;i++){
    myadd();
}
printf("enter total elements in list 2  ");
scanf("%d",&n1);
for(i=0;i<n1;i++){
    myadd1();
}
node *temp;
mylist();
mylist1();
for(t=head2;t!=NULL;){
        temp=t->next;
 finalsort(t);
t=temp;



}

mylist();

    }



3)

#include<stdio.h>
#include<conio.h>
struct emp{
int a;
struct emp *next;



};
typedef struct emp node;
node *head,*tail;
void input(node *p){
printf("enter a number \n");
scanf("%d",&(p->a));
p->next=NULL;
}
void myadd(node *p,node *q){
node *t;
t= (node*)calloc(1,sizeof(node));
t->a=p->a +q->a;
q->next=t;
t->next =NULL;

}




void main(){
int ch;
head= NULL;
node *t;
int k ,y;

head=(node*)calloc(1,sizeof(node));
head->a=0;
t=(node*)calloc(1,sizeof(node));
t->a=1;
head->next=t;
t->next=NULL;
printf("enter number of terms ");
scanf("%d",&y);
if(y==1){
    printf("%d",head->a);
}else
if(y==2){
    printf("%d%d",head->a,t->a);
}
else{
        printf("%d\t%d\t",head->a,t->a);
    for(t=head,k=2;k<y;k++,t=t->next){
        myadd(t,t->next);
        printf("%d\t",t->next->next->a);

    }


}

    }

4)

#include<stdio.h>
#include<conio.h>
#include<string.h>
struct emp{
char a[100];
int r;
int m1,m2,m;
struct emp *next;



};
typedef struct emp node;
node *head,*tail;
void input(node *p){
printf("enter name \n");
scanf("%s",(p->a));
printf("enter roll number ");
scanf("%d",&(p->r));
printf("enter marks 1 and 2 ");
scanf("%d",&(p->m1));
scanf("%d",&(p->m2));
p->m=p->m1+p->m2;
p->next=NULL;
}
void myadd(){
node *t;
t= (node*)calloc(1,sizeof(node));
input(t);
if(head==NULL)
    head = t;
else
   sort1(t);
   // tail->next=t;
//tail=t;
}
void print(node *p){
printf(" %s ",p->a);

}
void mylist(){
if(head==NULL){
    printf(" list is empty \n");
    return;

}
node *t;
for(t= head;t!=NULL;t=t->next)
{
    print(t);
}
printf("\n");
if(head->next!=NULL){
for(t=head;t->next->next!=NULL;t=t->next);
printf("2nd highest marks %s %d %d\n",t->a,t->m1,t->m2);
}}
void sort1(node *p){
node *t;
int bulb=0;
if(head->m>p->m){
    p->next=head;
    head =p;
    return;

}
for(t=head;t->next!=NULL;t=t->next){
    if(p->m<t->next->m){
        bulb =1;
        break;
    }}
    if(bulb==1){
        p->next=t->next;
        t->next=p;

    }
    else{
        t->next=p;
//p->next =NULL;
        tail=p;
    }

}
void del(){
if(head==NULL){
    printf(" list is empty \n");

return;
}
node *t;
t= head;
head =head->next;
free(t) ;
printf(" element deleted \n");


}

void main(){
int ch;
head= NULL;
do{
    printf("1. add 2. list 3. delete 4. exit\n");
    scanf("%d",&ch);
    switch(ch){
    case 1: myadd();break;
    case 2: mylist();break;
    case 3: del();break;
    case 4: break;



    }




}while(ch!=4);

}

5)

#include<stdio.h>
#include<conio.h>
struct emp{
int a;
struct emp *next;



};
typedef struct emp node;
node *head,*tail;
void input(node *p){
printf("enter a number \n");
scanf("%d",&(p->a));
p->next=NULL;
}
void myadd(){
node *t;
t= (node*)calloc(1,sizeof(node));
input(t);
if(head==NULL)
    head = t;
else

    tail->next=t;
tail=t;
}
void print(node *p){
printf(" %d ",p->a);

}
void mylist(){
if(head==NULL){
    printf(" list is empty \n");
    return;

}
node *t;
for(t= head;t!=NULL;t=t->next)
{
    print(t);
}
printf("\n");
}

void del(){
if(head==NULL){
    printf(" list is empty \n");

return;
}
int n;
printf("enter which number to delete");
scanf("%d",&n);
node *t,*k;

if(head->a==(n*n)){
    t=head;
    head=head->next;
    free(t);

}
for(t=head;t->next!=NULL;){
    if(t->next->a==(n*n)){

    k=t->next;
    t->next=k->next;
    free(k);

    }else
    {t=t->next;
    }
}

printf(" element deleted \n");
mylist();

}
void main(){
int ch;
head= NULL;
while(1){
    printf("1. add 2. list 3. delete 4. exit\n");
    scanf("%d",&ch);
    switch(ch){
    case 1: myadd();break;
    case 2: mylist();break;
    case 3: del();break;
    case 4: exit(0);



    }




}





}


6)

#include<stdio.h>
#include<conio.h>
struct emp{
int a;
struct emp *next;



};
typedef struct emp node;
node *head,*tail,*l1,*l2;
void input(node *p){
printf("enter a number ");
scanf("%d",&(p->a));
p->next=NULL;
}
void myadd(){
node *t;
t= (node*)calloc(1,sizeof(node));
input(t);
if(head==NULL)
    head = t;
else
    tail->next=t;
tail=t;
}
void print(node *p){
printf(" %d ",p->a);

}
void mylist(){
if(head==NULL){
    printf(" list is empty ");
    return;

}
node *t;
for(t= head;t!=NULL;t=t->next)
{
    print(t);
}

}
void del(){
if(head==NULL){
    printf(" list is empty ");

return;
}
node *t;
t= head;
head =head->next;
free(t) ;
printf(" element deleted ");


}
void main(){
int ch;
head= NULL;
do{
    printf("1. add 2. list 3. delete 4. exit \n");
    scanf("%d",&ch);
    switch(ch){
    case 1: myadd();break;
    case 2: mylist();break;
    case 3: del();break;
    case 4: break;



    }




}while(ch!=4);
int i;
node *t,*k1,*k2;
l1=NULL;
l2=NULL;
for(i=1,t=head;t!=NULL;t=t->next,i++){
    if((t->a)%2==0){
        if(l1==NULL){t->a=pow(t->a,3);
            l1=t;
            k1=l1;
        //    printf("%d",k1->a);
        }
        else{
        k1->next=t;
        t->a=pow(t->a,3);
        k1=k1->next;
      //  printf("%d",k1->a);
        }

    }
    else{
        if(l2==NULL){
            l2=t;
            t->a=pow(t->a,3);
            k2=l2;
           // printf("%d",k2->a);
        }else{
        k2->next=t;
        t->a=pow(t->a,3);
        k2=k2->next;
        //printf("%d",k2->a);
    }}


}if(l1!=NULL){
k1->next=NULL;}
if(l2!=NULL)
k2->next=NULL;
printf("numbers in list 1 \n");
for(t=l1;t!=NULL;t=t->next){
    printf("%d\t",t->a);
}
printf("\n numbers in list 2 \n");
for(t=l2;t!=NULL;t=t->next){
    printf("%d\t",t->a);
}


}


7)

#include<stdio.h>
#include<conio.h>
struct emp{
int a;
struct emp *next;



};
typedef struct emp node;
node *head,*tail,*l1,*l2;
void input(node *p){
printf("enter a number ");
scanf("%d",&(p->a));
p->next=NULL;
}
void myadd(){
node *t;
t= (node*)calloc(1,sizeof(node));
input(t);
if(head==NULL)
    head = t;
else
    tail->next=t;
tail=t;
}
void print(node *p){
printf(" %d ",p->a);

}
void mylist(){
if(head==NULL){
    printf(" list is empty ");
    return;

}
node *t;
for(t= head;t!=NULL;t=t->next)
{
    print(t);
}

}
void del(){
if(head==NULL){
    printf(" list is empty ");

return;
}
node *t;
t= head;
head =head->next;
free(t) ;
printf(" element deleted ");


}
void main(){
int ch;
head= NULL;
do{
    printf("1. add 2. list 3. delete 4. exit \n");
    scanf("%d",&ch);
    switch(ch){
    case 1: myadd();break;
    case 2: mylist();break;
    case 3: del();break;
    case 4: break;



    }




}while(ch!=4);
int i;
node *t,*k1,*k2;
l1=NULL;
l2=NULL;
for(i=1,t=head;t!=NULL;t=t->next,i++){
    if(i%2!=0){
        if(l1==NULL){
            l1=t;
            k1=l1;
        //    printf("%d",k1->a);
        }
        else{
        k1->next=t;
        k1=k1->next;
      //  printf("%d",k1->a);
        }

    }
    else{
        if(l2==NULL){
            l2=t;
            k2=l2;
           // printf("%d",k2->a);
        }else{
        k2->next=t;
        k2=k2->next;
        //printf("%d",k2->a);
    }}


}if(l1!=NULL)
k1->next=NULL;
if(l2!=NULL)
k2->next=NULL;
printf("numbers in list 1 \n");
for(t=l1;t!=NULL;t=t->next){
    printf("%d\t",t->a);
}
printf("\n numbers in list 2 \n");
for(t=l2;t!=NULL;t=t->next){
    printf("%d\t",t->a);
}


}



8)



#include<stdio.h>
#include<conio.h>
#include<string.h>
struct emp{
char a[100];
int r;
int m1,m2,m;
struct emp *next;



};
typedef struct emp node;
node *head,*tail;
void input(node *p){
printf("enter name \n");
scanf("%s",(p->a));
printf("enter roll number ");
scanf("%d",&(p->r));
printf("enter marks 1 and 2 ");
scanf("%d",&(p->m1));
scanf("%d",&(p->m2));
p->m=p->m1+p->m2;
p->next=NULL;
}
void myadd(){
node *t;
t= (node*)calloc(1,sizeof(node));
input(t);
if(head==NULL)
    head = t;
else
   sort1(t);
   // tail->next=t;
//tail=t;
}
void print(node *p){
printf(" %s ",p->a);

}
void mylist(){
if(head==NULL){
    printf(" list is empty \n");
    return;

}
node *t;
for(t= head;t!=NULL;t=t->next)
{
    print(t);
}
printf("\n");
if(head->next!=NULL){
for(t=head;t->next->next!=NULL;t=t->next);
printf("2nd highest marks %s %d %d\n",t->a,t->m1,t->m2);
}}
void sort1(node *p){
node *t;
int bulb=0;
if(head->m>p->m){
    p->next=head;
    head =p;
    return;

}
for(t=head;t->next!=NULL;t=t->next){
    if(p->m<t->next->m){
        bulb =1;
        break;
    }}
    if(bulb==1){
        p->next=t->next;
        t->next=p;

    }
    else{
        t->next=p;
//p->next =NULL;
        tail=p;
    }

}
void del(){
if(head==NULL){
    printf(" list is empty \n");

return;
}
node *t;
t= head;
head =head->next;
free(t) ;
printf(" element deleted \n");


}

void main(){
int ch;
head= NULL;
do{
    printf("1. add 2. list 3. delete 4. exit\n");
    scanf("%d",&ch);
    switch(ch){
    case 1: myadd();break;
    case 2: mylist();break;
    case 3: del();break;
    case 4: break;



    }




}while(ch!=4);

}


9)

#include<stdio.h>
#include<conio.h>
#include<string.h>
struct emp{
char a[100];
int r;
int m1,m2,m;
struct emp *next;



};
typedef struct emp node;
node *head,*tail;
void input(node *p,char a[100]){
printf("enter name \n");
scanf("%s",(a));
strcpy(p->a,a);

p->next=NULL;
}
void Nodeptrcreate(char a[100]){
node *t;
t= (node*)calloc(1,sizeof(node));
input(t,a);
if(head==NULL)
    head = t;
else
   //sort1(t);
   tail->next=t;
tail=t;
}
void print(node *p){
printf(" %s ",p->a);

}
void mylist(){
if(head==NULL){
    printf(" list is empty \n");
    return;

}
node *t;
for(t= head;t!=NULL;t=t->next)
{
    print(t);
    allVowels( t);

}
printf("\n");

}

void del(){
if(head==NULL){
    printf(" list is empty \n");

return;
}
node *t;
t= head;
head =head->next;
free(t) ;
printf(" element deleted \n");


}
void allVowels(node *p){
int i=0;
for(i=0;p->a[i]!='\0';i++){
    if(p->a[i]=='a'||p->a[i]=='e'||p->a[i]=='i'||p->a[i]=='o'||p->a[i]=='u'||p->a[i]=='A'||p->a[i]=='E'||p->a[i]=='I'||p->a[i]=='O'||p->a[i]=='U')

       continue;
       else
            printf(" %c ",p->a[i]);
}


}
void main(){
int ch;
char a[100];
head= NULL;
do{
    printf("1. add 2. list 3. delete 4. exit\n");
    scanf("%d",&ch);
    switch(ch){
    case 1: Nodeptrcreate(a );break;
    case 2: mylist();break;
    case 3: del();break;
    case 4: break;



    }




}while(ch!=4);

}